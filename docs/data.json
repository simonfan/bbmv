{
    "project": {
        "name": "bbmv",
        "version": "0.0.0"
    },
    "files": {
        "src/bbmv/pipe/aux/general.js": {
            "name": "src/bbmv/pipe/aux/general.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/bbmv/pipe/aux/parse-dest-str.js": {
            "name": "src/bbmv/pipe/aux/parse-dest-str.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/bbmv/pipe/dest-get.js": {
            "name": "src/bbmv/pipe/dest-get.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/bbmv/pipe/dest-set.js": {
            "name": "src/bbmv/pipe/dest-set.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/bbmv/aux.js": {
            "name": "src/bbmv/aux.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/bbmv/directives.js": {
            "name": "src/bbmv/directives.js",
            "modules": {
                "bbmv": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/bbmv/pipe-methods.js": {
            "name": "src/bbmv/pipe-methods.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/bbmv.js": {
            "name": "src/bbmv.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "bbmv": {
            "name": "bbmv",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/bbmv/directives.js",
            "line": 5,
            "description": "The modeld is the object that links together $els and models."
        }
    },
    "classes": {},
    "classitems": [
        {
            "file": "src/bbmv/pipe/aux/general.js",
            "line": 9,
            "description": "Creates a Regular Expression to capture property name.",
            "class": ""
        },
        {
            "file": "src/bbmv/pipe/aux/general.js",
            "line": 21,
            "description": "Returns the string with the first letter to lowercase.",
            "class": ""
        },
        {
            "file": "src/bbmv/pipe/aux/general.js",
            "line": 28,
            "description": "Returns the string with the first letter to uppercase.",
            "class": ""
        },
        {
            "file": "src/bbmv/pipe/aux/parse-dest-str.js",
            "line": 6,
            "description": "Parses a string into methodName and args.\nExample string: 'css:background-color'\n                'attr:href'\n                'val'",
            "params": [
                {
                    "name": "str",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/bbmv/pipe/aux/parse-dest-str.js",
            "line": 28,
            "description": "Returns optionally destProp string and method string\n[0] full match\n[1] selector\n[2] method string",
            "class": ""
        },
        {
            "file": "src/bbmv/pipe/aux/parse-dest-str.js",
            "line": 57,
            "description": "Parses the destination property of the jquery-pump.",
            "params": [
                {
                    "name": "str",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/bbmv/pipe/dest-get.js",
            "line": 11,
            "description": "Get from the jquery object",
            "params": [
                {
                    "name": "$el",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "dest",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/bbmv/pipe/dest-set.js",
            "line": 65,
            "description": "Set to the jquery object",
            "params": [
                {
                    "name": "$el",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "dest",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "value",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/bbmv/aux.js",
            "line": 6,
            "description": "Finds all bound elements within the pipe.",
            "params": [
                {
                    "name": "$el",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "namespace",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": ""
        },
        {
            "file": "src/bbmv/directives.js",
            "line": 38,
            "description": "Establishes a specific event on the DOM element\nto listen for drains.\n\nDoes not remove the default event listeners set on input\nelements ('change').\n\nThose should be set on the 'defaultDOMEvents' hash.",
            "params": [
                {
                    "name": "$el",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "event",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "bbmv"
        },
        {
            "file": "src/bbmv/directives.js",
            "line": 73,
            "description": "Binds the $el data to the model in\nuni-directional mode:\nfrom DOM to MODEL",
            "params": [
                {
                    "name": "$el",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "map",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "bbmv"
        },
        {
            "file": "src/bbmv/directives.js",
            "line": 105,
            "description": "Binds the model data to the $el in\nuni-directional mode:\nfrom MODEL to DOM",
            "params": [
                {
                    "name": "$el",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "map",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "bbmv"
        },
        {
            "file": "src/bbmv/directives.js",
            "line": 125,
            "description": "Dual way data binding.",
            "params": [
                {
                    "name": "$el",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "map",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "bbmv"
        },
        {
            "file": "src/bbmv.js",
            "line": 38,
            "description": "The attribute used to store the pipe id\nonto the $dest elements.",
            "type": "{[type]}",
            "class": "",
            "module": "bbmv"
        },
        {
            "file": "src/bbmv.js",
            "line": 72,
            "description": "Pump data.",
            "params": [
                {
                    "name": "argument",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "bbmv"
        },
        {
            "file": "src/bbmv.js",
            "line": 88,
            "description": "[drain description]",
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "bbmv"
        },
        {
            "file": "src/bbmv.js",
            "line": 99,
            "description": "Attempts to get the pipe id from the $dest object\nand then checks for a pipe in cache.\n\nIf no pipe is found in cache, instantiate a pipe\nset id onto $dest using the .data method\nand save pipe to cache using that id.",
            "params": [
                {
                    "name": "$dest",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "map",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "options",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "bbmv"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nCreates a Regular Expression to capture property name.",
            "line": " src/bbmv/pipe/aux/general.js:9"
        },
        {
            "message": "Missing item type\nReturns the string with the first letter to lowercase.",
            "line": " src/bbmv/pipe/aux/general.js:21"
        },
        {
            "message": "Missing item type\nReturns the string with the first letter to uppercase.",
            "line": " src/bbmv/pipe/aux/general.js:28"
        },
        {
            "message": "Missing item type\nParses a string into methodName and args.\nExample string: 'css:background-color'\n                'attr:href'\n                'val'",
            "line": " src/bbmv/pipe/aux/parse-dest-str.js:6"
        },
        {
            "message": "Missing item type\nReturns optionally destProp string and method string\n[0] full match\n[1] selector\n[2] method string",
            "line": " src/bbmv/pipe/aux/parse-dest-str.js:28"
        },
        {
            "message": "Missing item type\nParses the destination property of the jquery-pump.",
            "line": " src/bbmv/pipe/aux/parse-dest-str.js:57"
        },
        {
            "message": "Missing item type\nGet from the jquery object",
            "line": " src/bbmv/pipe/dest-get.js:11"
        },
        {
            "message": "Missing item type\nSet to the jquery object",
            "line": " src/bbmv/pipe/dest-set.js:65"
        },
        {
            "message": "Missing item type\nFinds all bound elements within the pipe.",
            "line": " src/bbmv/aux.js:6"
        },
        {
            "message": "Missing item type\nEstablishes a specific event on the DOM element\nto listen for drains.\n\nDoes not remove the default event listeners set on input\nelements ('change').\n\nThose should be set on the 'defaultDOMEvents' hash.",
            "line": " src/bbmv/directives.js:38"
        },
        {
            "message": "Missing item type\nBinds the $el data to the model in\nuni-directional mode:\nfrom DOM to MODEL",
            "line": " src/bbmv/directives.js:73"
        },
        {
            "message": "Missing item type\nBinds the model data to the $el in\nuni-directional mode:\nfrom MODEL to DOM",
            "line": " src/bbmv/directives.js:105"
        },
        {
            "message": "Missing item type\nDual way data binding.",
            "line": " src/bbmv/directives.js:125"
        },
        {
            "message": "Missing item type\nThe attribute used to store the pipe id\nonto the $dest elements.",
            "line": " src/bbmv.js:38"
        },
        {
            "message": "Missing item type\nPump data.",
            "line": " src/bbmv.js:72"
        },
        {
            "message": "Missing item type\n[drain description]",
            "line": " src/bbmv.js:88"
        },
        {
            "message": "Missing item type\nAttempts to get the pipe id from the $dest object\nand then checks for a pipe in cache.\n\nIf no pipe is found in cache, instantiate a pipe\nset id onto $dest using the .data method\nand save pipe to cache using that id.",
            "line": " src/bbmv.js:99"
        }
    ]
}